@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features;
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
 
@inject IOptions<RequestLocalizationOptions> LocOptions
​
@{
    var culture = Context.Request.HttpContext.Request.RouteValues["culture"]?.ToString() ?? "en";
    var script = Context.Request.HttpContext.Request.RouteValues["script"]?.ToString();
    var pathBase = Context.Request.PathBase.ToUriComponent() ?? string.Empty;

    string? url = null;    

    if (script != null)
    {        
        url = Context.Request.HttpContext.Features.Get<IHttpRequestFeature>()?.RawTarget;

        if (url?.StartsWith($"{pathBase}/{culture}/{script}/") ?? false)
        {
            url = url.Remove(0, pathBase.Length + culture.Length + script.Length + 3);
        }
        else
        {
            url = null;        
        }
    }

    var cultureItems = (new string[] { "latn", "tfng", "arab", "hebr", "cyrl", "grek" })
        .Select(c => new SelectListItem { Value = $"{pathBase}/{culture}/{c}/{url}", Text = c, Selected = c == script })
        .ToList();
}​

<select onchange="if (this.value) window.location.href=this.value" asp-items="cultureItems">
</select>
